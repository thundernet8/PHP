{"javascript":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findShortestSubArray = function (nums) {\n    var degree = 1;\n    var maxDegreeNums = [];\n    var firstAppearances = {};\n    var lastAppearances = {};\n    var counts = {};\n    var len = nums.length;\n    for (var i = 0; i < len; i++) {\n        if (firstAppearances[nums[i]] === undefined) {\n            firstAppearances[nums[i]] = i;\n        }\n        else {\n            lastAppearances[nums[i]] = i;\n        }\n        var appreances = (counts[nums[i]] || 0) + 1;\n        counts[nums[i]] = appreances;\n        if (appreances > degree) {\n            maxDegreeNums = [nums[i]];\n            degree = appreances;\n        }\n        else if (appreances === degree) {\n            maxDegreeNums.push(nums[i]);\n        }\n    }\n    var distances = maxDegreeNums\n        .map(function (num) {\n        return lastAppearances[num] !== undefined\n            ? lastAppearances[num] - firstAppearances[num] + 1\n            : 1;\n    })\n        .sort(function (a, b) { return a - b; });\n    return distances[0];\n};\n"}