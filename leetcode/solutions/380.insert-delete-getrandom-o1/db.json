{"javascript":"var RandomizedSet = /** @class */ (function () {\n    /**\n     * Initialize your data structure here.\n     */\n    function RandomizedSet() {\n        this.hashMap = new Map();\n        this.dataList = [];\n    }\n    /**\n     * Inserts a value to the set. Returns true if the set did not already contain the specified element.\n     * @param {number} val\n     * @return {boolean}\n     */\n    RandomizedSet.prototype.insert = function (val) {\n        var index = this.hashMap.get(val);\n        if (index === undefined) {\n            this.hashMap.set(val, this.dataList.length);\n            this.dataList.push(val);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Removes a value from the set. Returns true if the set contained the specified element.\n     * @param {number} val\n     * @return {boolean}\n     */\n    RandomizedSet.prototype.remove = function (val) {\n        var index = this.hashMap.get(val);\n        if (index !== undefined) {\n            var tail = this.dataList.pop();\n            if (index < this.dataList.length) {\n                this.dataList[index] = tail;\n                this.hashMap.set(tail, index);\n            }\n            this.hashMap.delete(val);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Get a random element from the set.\n     * @return {number}\n     */\n    RandomizedSet.prototype.getRandom = function () {\n        var length = this.dataList.length;\n        if (length > 0) {\n            var index = Math.floor(Math.random() * length);\n            if (index === length) {\n                index = 0;\n            }\n            return this.dataList[index];\n        }\n        return null;\n    };\n    return RandomizedSet;\n}());\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * var obj = Object.create(RandomizedSet).createNew()\n * var param_1 = obj.insert(val)\n * var param_2 = obj.remove(val)\n * var param_3 = obj.getRandom()\n */\n"}